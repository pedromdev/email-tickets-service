# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.message_received_repository:
        class: App\Repository\MessageReceivedRepository

    app.retrieve_contract_emails_service:
        class: App\Service\RetrieveContractEmailsService
        arguments: [
            '@secit.imap',
            '@doctrine.orm.default_entity_manager',
            '%env(resolve:IMAP_USERNAME)%'
        ]

    App\Service\RetrieveContractEmailsService: '@app.retrieve_contract_emails_service'

    app.send_contract_emails_service:
        class: App\Service\SendContractEmailsToEndpointService
        arguments: [
            '@app.message_received_repository',
            '@logger',
            '%env(resolve:WEBHOOK_ENDPOINT)%',
            '%env(int:MAX_ATTEMPTS)%'
        ]

    App\Service\SendContractEmailsToEndpointService: '@app.send_contract_emails_service'

    app.clear_old_messages_service:
        class: App\Service\ClearOldMessagesService
        arguments: [
            '@app.message_received_repository',
            '@doctrine.orm.default_entity_manager'
        ]

    App\Service\ClearOldMessagesService: '@app.clear_old_messages_service'
